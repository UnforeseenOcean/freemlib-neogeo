freemlib for Neo-Geo - Palette functionality
============================================
Palette data. I finally understand it enough.
Note: The fix layer can only use the first 16 palettes.

================================================================================
<Scratchpad>
* Tricks with switching palette banks?

* Fading (Would probably use precalculated tables)

* Brighten/Darken
More controlled version of Soft Shadow/Soft Bright. Would allow changes of +/- 1.

* Desaturate (single color or palset)
Involves dropping color information/approaching gray.
Might be folded into general Saturation command.

* Black and White (palset)
Possible weights:
 * Default		???
 * Red			Weight by Red
 * Orange		Weight by Red/Green mix
 * Yellow		Weight by Yellow
 * Green		Weight by Green
 * Aqua			Weight by Green/Blue mix
 * Blue			Weight by Blue
 * Purple		Weight by Blue/Red mix

* Other possible color effects?
 * Hue/Saturation/Value
 * Invert

================================================================================
<Palette Buffers>
The actual values will need to be written to palette RAM during VBlank.

* Main Palette Buffer	0x2000		(Values written to the Palette RAM)
* Pal. Action Buffer	0x0400		(Actions to run on VBlank)

================================================================================
<Palette Actions>
see palette/pal_actions.txt

================================================================================
[pal_LoadData]
Load raw color data into the palette RAM.

(Params)
d7				Number of color entries-1
a0				Address to load palette data from
a1				Beginning palette address to load data into ($400000-$401FFE)

================================================================================
[pal_LoadBuf]
Load raw color data into the palette buffer.

d7				Number of color entries-1
d6				Beginning buffer index to load data into ($0-$1FFE?)
a0				Address to load palette data from

================================================================================
[pal_LoadSetBuf]
Load a single palette set (16 colors) into the palette buffer.

(Params)
d7				Palette set to load data into ($00-$FF)
a0				Address to load palette data from

================================================================================
[pal_SetColor]
Set the value of a single color in the palette buffer.

(Params)
d?				Palette Set, Palette Index ($SS0i, where SS=$00-$FF and i=$0-$F)
d?				New color value

If I was an insane person I could fit the entire thing into a single register,
but I don't think I'm going to do that.

================================================================================
[pal_SoftShadow]
Halves the color values of the specified color in the palette buffer.

(Params)
d7				Palette Set, Palette Index ($SS0i; SS=$00-$FF, i=$0-$F)

================================================================================
[pal_SoftBright]
Doubles the color values of the specified color in the palette buffer.

(Params)
d7				Palette Set, Palette Index ($SS0i; SS=$00-$FF, i=$0-$F)

================================================================================
[pal_SetSingleRed]
Modify the Red channel of the specified color in the palette buffer.

(Params)
d7				Palette Set, Palette Index ($SS0i; SS=$00-$FF, i=$0-$F)
d6				New Red channel value

================================================================================
[pal_SetSingleGreen]
Modify the Green channel of the specified color in the palette buffer.

(Params)
d7				Palette Set, Palette Index ($SS0i; SS=$00-$FF, i=$0-$F)
d6				New Green channel value

================================================================================
[pal_SetSingleBlue]
Modify the Blue channel of the specified color in the palette buffer.

(Params)
d7				Palette Set, Palette Index ($SS0i; SS=$00-$FF, i=$0-$F)
d6				New Blue channel value
